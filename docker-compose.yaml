services:
  backend:
    image: shop_service
    container_name: shop_service
    build:
      context: ./catalog
    ports:
      - "8080:8080"
    depends_on:
      postgres-catalog:
        condition: service_healthy
      kafka:
        condition: service_healthy

  postgres-catalog:
    image: postgres
    container_name: postgres-catalog
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: psswd
      POSTGRES_DB: postgresDB
      PGPORT: 5444
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgresDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - './catalog/migrations/:/docker-entrypoint-initdb.d/'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10

  consumer:
    build: ./consumer  
    container_name: kafka-consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: user-events
    restart: always
    networks:
      - default
